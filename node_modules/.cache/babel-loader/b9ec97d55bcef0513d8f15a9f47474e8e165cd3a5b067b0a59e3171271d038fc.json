{"ast":null,"code":"import _toConsumableArray from\"/Users/mahammadsuelc/Desktop/automation/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/Users/mahammadsuelc/Desktop/automation/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/mahammadsuelc/Desktop/automation/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/mahammadsuelc/Desktop/automation/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import'./App.css';// import { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport DatePicker from\"react-datepicker\";import\"react-datepicker/dist/react-datepicker.css\";import*as XLSX from'xlsx';import moment from\"moment/moment\";import upload from'./Assets/upload.png';import LoadingSpinner from\"./LoadingSpinner\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(new Date()),_useState2=_slicedToArray(_useState,2),fromDate=_useState2[0],setFromDate=_useState2[1];var _useState3=useState(new Date()),_useState4=_slicedToArray(_useState3,2),toDate=_useState4[0],setToDate=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),excelData=_useState6[0],setExcelData=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),progress=_useState8[0],setProgress=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),showExportButton=_useState10[0],setShowExportButton=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),showLoader=_useState12[0],setShowLoader=_useState12[1];var _useState13=useState(null),_useState14=_slicedToArray(_useState13,2),completedFiles=_useState14[0],setcompletedFiles=_useState14[1];var _useState15=useState(0),_useState16=_slicedToArray(_useState15,2),totalFiles=_useState16[0],setTotalFiles=_useState16[1];var handleFileSelect=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e){var files,_ref2,_ref3,convertedDataArray,_loop,i;return _regeneratorRuntime().wrap(function _callee3$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:files=e.target.files;setTotalFiles(files.length);if(!(files&&files.length>0)){_context4.next=18;break;}setShowExportButton(false);setShowLoader(true);convertedDataArray=[];setExcelData([]);_loop=/*#__PURE__*/_regeneratorRuntime().mark(function _loop(){var file,data,workbook,sheetName;return _regeneratorRuntime().wrap(function _loop$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:// console.log(\"pregresss\",(i/files.length)*100 );\nsetProgress(\"\".concat((i/files.length*100).toFixed(),\"%\"));setcompletedFiles(i);file=files[i];_context3.prev=3;_context3.next=6;return readFileAsync(file);case 6:data=_context3.sent;workbook=XLSX.read(data,{type:'binary'});// Assuming you want to convert the first sheet to JSON\nsheetName=workbook.SheetNames;_context3.next=11;return sheetName.forEach(/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(sheetName){var sheetData,data1,startDateOld,endDate,oneDayMilliseconds,startDate,newData;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:if(!(sheetName===\"TOTAL\")){_context2.next=13;break;}// console.log(\"sheetName==>jhjkghsjhG\", sheetName);\nsheetData=XLSX.utils.sheet_to_json(workbook.Sheets[sheetName],{raw:false,// Interpret dates as JavaScript dates\ndateNF:new Date()// Format for parsing dates (adjust as needed)\n});data1=[];startDateOld=new Date(moment(fromDate).format('yyyy-MM-DD'));// October 1, 2023\nendDate=new Date(moment(toDate).format('yyyy-MM-DD'));oneDayMilliseconds=24*60*60*1000;// 24 hours * 60 minutes * 60 seconds * 1000 milliseconds\nstartDate=new Date(startDateOld-oneDayMilliseconds);// console.log(\"sheetData==>\", typeof(startDate), endDate, sd);\n_context2.next=9;return sheetData.map(/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(val){var itemDateParts,itemYear,itemMonth,itemDay,itemJavaScriptDate,finelData;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if(val!==null&&val!==void 0&&val.Date&&(val===null||val===void 0?void 0:val.Date)!==\"Total\"&&val[\" Adjusted Billable Spend \"]&&val[\" Adjusted Profit \"]){itemDateParts=val===null||val===void 0?void 0:val.Date.split('-');itemYear=new Date(fromDate).getFullYear();itemMonth=itemDateParts[1].toLowerCase();// Convert to lowercase for consistency\nitemDay=parseInt(itemDateParts[0]);itemJavaScriptDate=new Date(\"\".concat(itemYear,\"-\").concat(itemMonth,\"-\").concat(itemDay));// console.log(\"itemJavaScriptDate\", itemJavaScriptDate, startDate);\n// console.log(\"itemJavaScriptDate\", itemYear, itemDateParts, `2023-${itemMonth}-${itemDay}`);\nif(itemJavaScriptDate>=startDate&&itemJavaScriptDate<=endDate){console.log(\"itemJavaScriptDate\",moment(new Date(val===null||val===void 0?void 0:val.Date)).format(\"DD-MMM\"));finelData={\"Spend Sheet Name\":file===null||file===void 0?void 0:file.name,\"Date\":moment(new Date(val===null||val===void 0?void 0:val.Date)).format(\"DD-MMM\"),\"Adjusted Billable Spend\":val[\" Adjusted Billable Spend \"],\"Adjusted Profit\":val[\" Adjusted Profit \"]};// console.log(\"sasasasas\", finelData);\ndata1.push(finelData);// return finelData\n}}case 1:case\"end\":return _context.stop();}},_callee);}));return function(_x3){return _ref5.apply(this,arguments);};}());case 9:_context2.next=11;return data1.filter(function(item){if(item!==undefined){return item;}});case 11:newData=_context2.sent;// console.log(\"DDFLJKDJKDJ ===>\", newData);\nconvertedDataArray.push(data1);case 13:case\"end\":return _context2.stop();}},_callee2);}));return function(_x2){return _ref4.apply(this,arguments);};}());case 11:_context3.next=16;break;case 13:_context3.prev=13;_context3.t0=_context3[\"catch\"](3);console.error(\"Error converting Excel file \".concat(file===null||file===void 0?void 0:file.name,\" to JSON:\"),_context3.t0);case 16:case\"end\":return _context3.stop();}},_loop,null,[[3,13]]);});i=0;case 9:if(!(i<=files.length)){_context4.next=14;break;}return _context4.delegateYield(_loop(),\"t0\",11);case 11:i++;_context4.next=9;break;case 14:// Set the array of converted JSON data in state\nconsole.log(\"convertedDataArray===>\",(_ref2=[]).concat.apply(_ref2,convertedDataArray));setExcelData((_ref3=[]).concat.apply(_ref3,convertedDataArray));setShowExportButton(true);setShowLoader(false);case 18:case\"end\":return _context4.stop();}},_callee3);}));return function handleFileSelect(_x){return _ref.apply(this,arguments);};}();var readFileAsync=function readFileAsync(file){return new Promise(function(resolve,reject){var reader=new FileReader();reader.onload=function(event){resolve(event.target.result);};reader.onerror=function(event){reject(event.target.error);};reader.readAsBinaryString(file);});};var handleExportExcel=function handleExportExcel(){var _ref6;var dd=(_ref6=[]).concat.apply(_ref6,_toConsumableArray(excelData));var worksheet=XLSX.utils.json_to_sheet(dd);var workbook=XLSX.utils.book_new();XLSX.utils.book_append_sheet(workbook,worksheet,\"Sheet1\");XLSX.writeFile(workbook,\"DataSheet.xlsx\",{type:'binary',bookType:'xlsx',cellDates:true});};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"datePickerView\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"fromData\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"From Date\"}),/*#__PURE__*/_jsx(DatePicker,{className:\"datePicker\",selected:fromDate,onChange:function onChange(date){return setFromDate(date);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"toDate\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"To Date \"}),/*#__PURE__*/_jsx(DatePicker,{className:\"datePicker\",selected:toDate,onChange:function onChange(date){return setToDate(date);}})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"file-upload\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Click box to upload\"}),/*#__PURE__*/_jsx(\"img\",{src:upload,alt:\"upload\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"excelFileInput\",accept:\".xlsx, .xls\"// Specify accepted file types (Excel formats)\n,multiple:true// Allow multiple file selection\n,onChange:handleFileSelect})]}),excelData.length>1&&showExportButton&&/*#__PURE__*/_jsx(\"button\",{className:\"exportButton\",onClick:handleExportExcel,title:\"Export\",children:\"Export\"}),showExportButton&&excelData.length<=1&&/*#__PURE__*/_jsx(\"h2\",{children:\"No Data found\"}),completedFiles&&/*#__PURE__*/_jsxs(\"div\",{className:\"progressView\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Total files processed \".concat(completedFiles,\"/\").concat(totalFiles)}),/*#__PURE__*/_jsx(\"h1\",{children:progress})]})]});};export default App;","map":{"version":3,"names":["React","useState","DatePicker","XLSX","moment","upload","LoadingSpinner","jsx","_jsx","jsxs","_jsxs","App","_useState","Date","_useState2","_slicedToArray","fromDate","setFromDate","_useState3","_useState4","toDate","setToDate","_useState5","_useState6","excelData","setExcelData","_useState7","_useState8","progress","setProgress","_useState9","_useState10","showExportButton","setShowExportButton","_useState11","_useState12","showLoader","setShowLoader","_useState13","_useState14","completedFiles","setcompletedFiles","_useState15","_useState16","totalFiles","setTotalFiles","handleFileSelect","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","e","files","_ref2","_ref3","convertedDataArray","_loop","i","wrap","_callee3$","_context4","prev","next","target","length","file","data","workbook","sheetName","_loop$","_context3","concat","toFixed","readFileAsync","sent","read","type","SheetNames","forEach","_ref4","_callee2","sheetData","data1","startDateOld","endDate","oneDayMilliseconds","startDate","newData","_callee2$","_context2","utils","sheet_to_json","Sheets","raw","dateNF","format","map","_ref5","_callee","val","itemDateParts","itemYear","itemMonth","itemDay","itemJavaScriptDate","finelData","_callee$","_context","split","getFullYear","toLowerCase","parseInt","console","log","name","push","stop","_x3","apply","arguments","filter","item","undefined","_x2","t0","error","delegateYield","_x","Promise","resolve","reject","reader","FileReader","onload","event","result","onerror","readAsBinaryString","handleExportExcel","_ref6","dd","_toConsumableArray","worksheet","json_to_sheet","book_new","book_append_sheet","writeFile","bookType","cellDates","className","children","selected","onChange","date","src","alt","id","accept","multiple","onClick","title"],"sources":["/Users/mahammadsuelc/Desktop/automation/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './App.css'\n// import { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as XLSX from 'xlsx'\nimport moment from \"moment/moment\";\nimport upload from './Assets/upload.png'\nimport LoadingSpinner from \"./LoadingSpinner\";\n\nconst App = () => {\n  const [fromDate, setFromDate] = useState(new Date());\n  const [toDate, setToDate] = useState(new Date());\n  const [excelData, setExcelData] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [showExportButton, setShowExportButton] = useState(false)\n  const [showLoader, setShowLoader] = useState(false)\n  const [completedFiles, setcompletedFiles] = useState(null)\n  const [totalFiles, setTotalFiles] = useState(0)\n\n\n  const handleFileSelect = async (e) => {\n    const files = e.target.files;\n    setTotalFiles(files.length)\n    if (files && files.length > 0) {\n      setShowExportButton(false)\n      setShowLoader(true)\n      const convertedDataArray = [];\n      setExcelData([])\n      for (let i = 0; i <= files.length; i++) {\n        // console.log(\"pregresss\",(i/files.length)*100 );\n        setProgress(`${((i / files.length) * 100).toFixed()}%`)\n        setcompletedFiles(i)\n        const file = files[i];\n        try {\n          const data = await readFileAsync(file);\n          const workbook = XLSX.read(data, { type: 'binary' });\n\n          // Assuming you want to convert the first sheet to JSON\n          const sheetName = workbook.SheetNames;\n          await sheetName.forEach(async (sheetName) => {\n            if (sheetName === \"TOTAL\") {\n              // console.log(\"sheetName==>jhjkghsjhG\", sheetName);\n              const sheetData = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName], {\n                raw: false, // Interpret dates as JavaScript dates\n                dateNF: new Date(), // Format for parsing dates (adjust as needed)\n              });\n\n              const data1 = []\n              const startDateOld = new Date(moment(fromDate).format('yyyy-MM-DD')); // October 1, 2023\n              const endDate = new Date(moment(toDate).format('yyyy-MM-DD'));\n\n              const oneDayMilliseconds = 24 * 60 * 60 * 1000; // 24 hours * 60 minutes * 60 seconds * 1000 milliseconds\n              const startDate = new Date(startDateOld - oneDayMilliseconds);\n\n              // console.log(\"sheetData==>\", typeof(startDate), endDate, sd);\n              await sheetData.map(async (val) => {\n                if (val?.Date && val?.Date !== \"Total\" && val[\" Adjusted Billable Spend \"] && val[\" Adjusted Profit \"]) {\n                  const itemDateParts = val?.Date.split('-');\n                  const itemYear = new Date(fromDate).getFullYear() \n                  const itemMonth = itemDateParts[1].toLowerCase(); // Convert to lowercase for consistency\n                  const itemDay = parseInt(itemDateParts[0]);\n\n                  const itemJavaScriptDate = new Date(`${itemYear}-${itemMonth}-${itemDay}`);\n                  // console.log(\"itemJavaScriptDate\", itemJavaScriptDate, startDate);\n                  // console.log(\"itemJavaScriptDate\", itemYear, itemDateParts, `2023-${itemMonth}-${itemDay}`);\n                  if (itemJavaScriptDate >= startDate && itemJavaScriptDate <= endDate) {\n                    console.log(\"itemJavaScriptDate\",moment(new Date(val?.Date)).format(\"DD-MMM\")  );\n                    const finelData = {\n                      \"Spend Sheet Name\": file?.name,\n                      \"Date\": moment(new Date(val?.Date)).format(\"DD-MMM\"),\n                      \"Adjusted Billable Spend\": val[\" Adjusted Billable Spend \"],\n                      \"Adjusted Profit\": val[\" Adjusted Profit \"]\n                    }\n                    // console.log(\"sasasasas\", finelData);\n                    data1.push(finelData)\n                    // return finelData\n                  }\n                }\n              })\n              // console.log('Converted Excel data ===>:', data1);\n              const newData = await data1.filter((item) => {\n                if (item !== undefined) {\n                  return item\n                }\n              })\n              // console.log(\"DDFLJKDJKDJ ===>\", newData);\n              convertedDataArray.push(data1);\n            }\n          })\n          // Store the converted JSON data in an array\n\n        } catch (error) {\n          console.error(`Error converting Excel file ${file?.name} to JSON:`, error);\n        }\n      }\n\n      // Set the array of converted JSON data in state\n      console.log(\"convertedDataArray===>\", [].concat(...convertedDataArray));\n      setExcelData([].concat(...convertedDataArray));\n      setShowExportButton(true)\n      setShowLoader(false)\n    }\n  };\n\n  const readFileAsync = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = (event) => {\n        resolve(event.target.result);\n      };\n\n      reader.onerror = (event) => {\n        reject(event.target.error);\n      };\n\n      reader.readAsBinaryString(file);\n    });\n  };\n\n\n  const handleExportExcel = () => {\n    const dd = [].concat(...excelData)\n    const worksheet = XLSX.utils.json_to_sheet(dd);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\n    XLSX.writeFile(workbook, \"DataSheet.xlsx\", { type: 'binary', bookType: 'xlsx', cellDates: true });\n  }\n\n  return (\n    <div className='container'>\n      <div className='datePickerView'>\n        <div className=\"fromData\">\n          <h2>From Date</h2>\n          <DatePicker className=\"datePicker\" selected={fromDate} onChange={(date) => setFromDate(date)} />\n        </div>\n\n        <div className=\"toDate\">\n          <h2>To Date </h2>\n          <DatePicker className=\"datePicker\" selected={toDate} onChange={(date) => setToDate(date)} />\n        </div>\n      </div>\n      <div className=\"file-upload\">\n        <h2>Click box to upload</h2>\n        <img src={upload} alt=\"upload\" />\n        <input\n          type=\"file\"\n          id=\"excelFileInput\"\n          accept=\".xlsx, .xls\" // Specify accepted file types (Excel formats)\n          multiple // Allow multiple file selection\n          onChange={handleFileSelect}\n        />\n      </div>\n\n\n      {excelData.length > 1 && showExportButton && <button\n        className=\"exportButton\"\n        onClick={handleExportExcel}\n        title=\"Export\"\n      >\n        Export\n      </button>\n      }\n      {showExportButton && excelData.length <= 1 &&\n        <h2>\n          No Data found\n        </h2>\n      }\n      {completedFiles &&\n        <div className=\"progressView\">\n          <h3>\n            {`Total files processed ${completedFiles}/${totalFiles}`}\n          </h3>\n          <h1>\n            {progress}\n          </h1>\n        </div>}\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}